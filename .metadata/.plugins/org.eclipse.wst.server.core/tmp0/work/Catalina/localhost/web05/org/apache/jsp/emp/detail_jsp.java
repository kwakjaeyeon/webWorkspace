/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.104
 * Generated at: 2020-07-03 07:56:14 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.emp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;

public final class detail_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {


java.sql.Connection conn = null;
java.sql.Statement stmt = null;
java.sql.ResultSet rs = null;
String driver = "oracle.jdbc.driver.OracleDriver";
String url = "jdbc:oracle:thin:@localhost:1521:xe";
String user = "scott";
String password = "tiger";

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/emp/../template/menu.jspf", Long.valueOf(1593762876056L));
    _jspx_dependants.put("/emp/../template/footer.jspf", Long.valueOf(1593747559869L));
    _jspx_dependants.put("/emp/../template/header.jspf", Long.valueOf(1593762521661L));
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=EUC-KR\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("<table width = \"1024\" align = \"CENTER\" bgcolor=\"#cccccc\">\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t\t<td>\r\n");
      out.write("\t\t<p>");

		Object obj= session.getAttribute("name");
		if(obj != null) {
			String loginName = (String)obj;
			out.print(loginName + "님 로그인 중...");
		}
		
      out.write("</p>\r\n");
      out.write("\t\t<a href = \"/web05/index.jsp\" ><img src = \"/web05/img/logo.png\"></a>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t</td>\r\n");
      out.write("\t</tr>");
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("    \r\n");
      out.write("\t<tr align=\"center\" bgcolor=\"gray\">\r\n");
      out.write("\t\t<td>\r\n");
      out.write("\t\t\t<a href = \"/web05/index.jsp\" style = \"color:white;\">[HOME]</a>\r\n");
      out.write("\t\t\t<a href = \"/web05/emp/list.jsp\" style = \"color:white;\">[E M P]</a>\r\n");
      out.write("\t\t\t<a href = \"/web05/dept/list.jsp\" style = \"color:white;\">[DEPT]</a>\r\n");
      out.write("\t\t\t");

			Object obj1 = session.getAttribute("name");
			if(obj1 == null) {
			
      out.write("\r\n");
      out.write("\t\t\t\t<a href = \"/web05/login/form.jsp\" style = \"color:white;\">[LOGIN]</a>\r\n");
      out.write("\t\t\t");

			} else {
			
      out.write("\r\n");
      out.write("\t\t\t\t<a href = \"/web05/login/logout.jsp\" style = \"color:white;\">[LOOUT]</a>\r\n");
      out.write("\t\t\t");
} 
      out.write("\r\n");
      out.write("\t\t</td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t\t<td>\r\n");
      out.write("\t\t\t<!-- content start -->");
      out.write('\r');
      out.write('\n');

int sabun = Integer.parseInt(request.getParameter("idx"));
String name = null;
java.util.Date nalja = null;
int pay = 0;

String sql = "select * from emp01 where sabun=" + sabun;
try {
	Class.forName(driver);
	conn = DriverManager.getConnection(url, user, password);
	stmt = conn.createStatement();
	rs = stmt.executeQuery(sql);
	if(rs.next()) {
		name = rs.getString("name");
		nalja = rs.getDate("nalja");
		pay = rs.getInt("pay");
	}
	
} finally {
	if(rs != null) rs.close();
	if(stmt != null) stmt.close();
	if(conn != null) conn.close();
}


      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<h1>상세페이지</h1>\r\n");
      out.write("\t<table width = \"800\" align = \"center\">\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td>사번</td>\r\n");
      out.write("\t\t\t<td>");
      out.print(sabun );
      out.write("</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td>이름</td>\r\n");
      out.write("\t\t\t<td>");
      out.print(name );
      out.write("</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td>날짜</td>\r\n");
      out.write("\t\t\t<td>");
      out.print(nalja );
      out.write("</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td>금액</td>\r\n");
      out.write("\t\t\t<td>");
      out.print(pay );
      out.write("</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td colspan = \"2\">[입력]</td>\r\n");
      out.write("\t\r\n");
      out.write("\t</table>\r\n");
      out.write("\r\n");
      out.write("<!-- content end -->\r\n");
      out.write("\t\t</td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t\t<td bgcolor=\"gray\"  align = \"CENTER\">\r\n");
      out.write("\t\t\t<font color = \"white\">\r\n");
      out.write("\t\t\t비트캠프 서울시 서초구 강남대로 459 (서초동, 백암빌딩)<br>\r\n");
      out.write("\t\t\tCopyright (c) 비트캠프 All rights reserved.\r\n");
      out.write("\t\t\t</font>\r\n");
      out.write("\t\t</td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</table>");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
